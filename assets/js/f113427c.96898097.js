"use strict";(self.webpackChunkcbk_2000=self.webpackChunkcbk_2000||[]).push([[1938],{3905:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},h=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||o;return r?n.createElement(m,l(l({ref:t},h),{},{components:r})):n.createElement(m,l({ref:t},h))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8648:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2},l="Branch System",i={unversionedId:"development/branch",id:"development/branch",title:"Branch System",description:"Branch System",source:"@site/docs/development/branch.md",sourceDirName:"development",slug:"/development/branch",permalink:"/os-documentation/docs/development/branch",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/development/branch.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/os-documentation/docs/development/getting-started"},next:{title:"Directory Structure",permalink:"/os-documentation/docs/development/directory-structure"}},s={},c=[{value:"Branch System",id:"branch-system-1",level:2},{value:"Master/Main Branch",id:"mastermain-branch",level:2},{value:"Pull Request Tutorial",id:"pull-request-tutorial",level:3},{value:"WARNING: DO NOT CLICK IT YET",id:"warning-do-not-click-it-yet",level:4},{value:"Development/Dev Branch",id:"developmentdev-branch",level:2},{value:"Usage on local",id:"usage-on-local",level:3},{value:"Release Branch",id:"release-branch",level:2},{value:"Hotfix Branch",id:"hotfix-branch",level:2}],h={toc:c},u="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"branch-system"},"Branch System"),(0,a.kt)("h2",{id:"branch-system-1"},"Branch System"),(0,a.kt)("p",null,"In CBK2000 Group, there are 4 main branches that are used mainly in each repository, namely:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"master\nor\nmain\n\ndevelopment\nor\ndev\n\nrelease\nhotfix\n")),(0,a.kt)("h2",{id:"mastermain-branch"},"Master/Main Branch"),(0,a.kt)("p",null,"The master or main branch is the main branch of the production in which the most updated code and currently deployed code is located. This branch MUST BE PROTECTED at all cost from direct pushes. The only way in order to access this branch is through a pull request that is done through the development branch. In order to save building time, this branch is only to be updated on major updates or on a hotfix scenario where a fix must be done."),(0,a.kt)("h3",{id:"pull-request-tutorial"},"Pull Request Tutorial"),(0,a.kt)("p",null,"In order to create a pull request first make sure your are in the branch that is ahead in commit from the branch that is going to be pushed to. "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"branch check",src:r(969).Z,width:"915",height:"631"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"branch check 2",src:r(0).Z,width:"933",height:"654"})),(0,a.kt)("p",null,"A pull request can be done through these buttons, however the top button isn't always there thus it is more reliable to remember the button through the contribute dropdown section."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"pull request",src:r(5644).Z,width:"951",height:"594"})),(0,a.kt)("p",null,"Once the button is pressed, A menu will appear. The first thing to do is to check which branch is going to be the source and which branch is going to be the target. In the example below, the source branch is dev while the target branch is master."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"pull request 2",src:r(6963).Z,width:"940",height:"608"})),(0,a.kt)("p",null,"Once that is in check, now check the status of the pull request, if it is available to merge than you can safely create the pull request, but if there is any conflicts/problem that causes the status to be not green / not able to merge than solve the problem in your local machine first before proceeding. Usually a quick"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git pull origin <target_branch>\n")),(0,a.kt)("p",null,"should give you an idea on what is the problem (usually a merge conflict). Once the conflict/problem is finished, you can push it back to the source branch and check if the status has turned green."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"pull request 3",src:r(5280).Z,width:"925",height:"515"})),(0,a.kt)("p",null,"Next up, for best practice, please write down a header title to summarize on what is the pull request is about and a short description below it to support the title if any other developers need to know what udpate has been done."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"pull request 4",src:r(7479).Z,width:"925",height:"521"})),(0,a.kt)("p",null,"Once all of that is completed, you are free to click on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Create pull request")," button"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"pull request 5",src:r(8044).Z,width:"935",height:"617"})),(0,a.kt)("p",null,"After that, you should be displayed with a menu where in the menu there should be a ",(0,a.kt)("inlineCode",{parentName:"p"},"Merge pull request")," button close to this"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"pull request 6",src:r(5545).Z,width:"956",height:"691"})),(0,a.kt)("h4",{id:"warning-do-not-click-it-yet"},"WARNING: DO NOT CLICK IT YET"),(0,a.kt)("p",null,"For best practice, please contact your fellow developers for a code review to make sure there isn't a problem hiding in plain sight that you might've missed. Once your fellow developers have approved your pull request, ONLY AND ONLY THEN you can click the button."),(0,a.kt)("h2",{id:"developmentdev-branch"},"Development/Dev Branch"),(0,a.kt)("p",null,"In this branch, there 2 ways you/your team can approach it. "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"One way is to stack up all developments there with direct push to the development branch available "),(0,a.kt)("li",{parentName:"ol"},"Second way is for every developer could create their own branch with their respective development branches/features that are developed and create a system close to the master branch is to the development branch (protect the branch from direct push).")),(0,a.kt)("p",null,"This branch is created in order to prevent occasional pushes to the master/main branch for small changes thus saving up on workflows and down time for the deployment."),(0,a.kt)("h3",{id:"usage-on-local"},"Usage on local"),(0,a.kt)("p",null,"In your local machine you could use the command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'git checkout -b "<name_of_development branch>"\n')),(0,a.kt)("p",null,"in order to directly pull from the remote repository or if it hasn't existed yet, create one."),(0,a.kt)("h2",{id:"release-branch"},"Release Branch"),(0,a.kt)("p",null,"The release branch is used to ..."),(0,a.kt)("h2",{id:"hotfix-branch"},"Hotfix Branch"),(0,a.kt)("p",null,"TODO"))}p.isMDXComponent=!0},5644:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/pr-a8985b87da2d2a8d5fe13dec857fed65.jpg"},6963:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/pr2-57476eec41c1405c3f16710fdfdfcb6f.jpg"},5280:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/pr3-afa49dc8b72b8c23ce4aaed1ec79e906.jpg"},7479:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/pr4-ee708e77b767b011a676a9254667840e.jpg"},8044:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/pr5-2287d8556544556f026fabb3a446d96e.jpg"},5545:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/pr6-058ec23076d2b2d4fad19e52a65f600a.jpg"},969:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/prbranch-dfd1d8958a4fc9483cd8cdc05e5962b7.jpg"},0:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/prbranch2-b08ab0af1a0144244b207540759011c0.jpg"}}]);